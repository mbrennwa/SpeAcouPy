{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SpeAcouPy Documentation","text":"<p>Welcome! This site is for users who want to simulate loudspeaker systems with the SpeAcouPy CLI. You don't need Python knowledge to use the tool; copy the YAML examples and run the CLI.</p> <ul> <li>Start with Getting started.</li> <li>Learn the ideas behind the tool in Concepts.</li> <li>Explore a hands-on tutorial: Sealed box.</li> <li>Prefer offline reading? Download the full PDF.</li> </ul> <p>If you're a power user interested in Python internals, see the (future) Advanced appendix.</p>"},{"location":"getting-started/","title":"Getting started","text":""},{"location":"getting-started/#install-speacoupy","title":"Install SpeAcouPy","text":"<ul> <li>Install SpeAcouPy following the instructions in the project README (release binaries or pip).</li> <li>Verify installation: <pre><code>speacoupy --version\n</code></pre></li> </ul>"},{"location":"getting-started/#your-first-run-no-files-created","title":"Your first run (no files created)","text":"<p><pre><code>speacoupy --help\n</code></pre> This prints the available commands and options to your terminal. No files are created yet.</p>"},{"location":"getting-started/#run-a-simple-simulation-sealed-box","title":"Run a simple simulation (sealed box)","text":"<p>1) Download the example config: sealed.yaml 2) Run the simulation: <pre><code>speacoupy simulate examples/sealed.yaml\n</code></pre> What happens: - SpeAcouPy reads parameters from <code>examples/sealed.yaml</code>. - It runs the sealed-box simulation. - It writes results to an output folder (plots as PNG, data as CSV). The default location and filenames depend on the CLI options; see CLI \u2192 Overview for details.</p> <p>Tip: Copy <code>examples/sealed.yaml</code> to your working directory and tweak values to explore different box sizes and drivers.</p>"},{"location":"cli/","title":"CLI overview","text":"<p>The CLI organizes actions into subcommands. The exact list may evolve; see: <pre><code>speacoupy --help\n</code></pre> and <pre><code>speacoupy simulate --help\n</code></pre></p> <p>Common patterns: - <code>speacoupy simulate &lt;config.yaml&gt;</code>: run a simulation using a YAML configuration. - <code>--output &lt;folder&gt;</code>: choose an output directory (plots, CSV). - <code>--format &lt;png|svg|csv&gt;</code>: choose output formats if available. - <code>--plots</code>: request generation of standard plots (SPL, impedance, phase).</p> <p>The Commands page can be autogenerated in CI from <code>--help</code> output so it always matches the current release.</p>"},{"location":"concepts/overview/","title":"Concepts overview","text":"<p>SpeAcouPy models loudspeaker systems using lumped acoustic elements. Typical elements include: - Driver: moving-coil loudspeaker modeled by its Thiele/Small parameters. - Enclosure: sealed or vented volumes represented by compliance and losses. - Ports / ducts: masses with end corrections and viscous losses. - Crossovers / filters: electrical networks affecting input voltage/current. - Radiation: baffle/port radiation models to predict on-axis SPL.</p> <p>Assumptions (high level): - Small-signal, linear operation. - Frequency-domain steady-state response. - Quasi-1D lumped parameters (valid below modal region of enclosures/rooms).</p> <p>See the tutorials for concrete examples.</p>"},{"location":"config/overview/","title":"Configuration files (YAML)","text":"<p>Simulations are driven by YAML configuration files. A minimal sealed-box example:</p> <pre><code>system:\n  driver:\n    fs: 50       # Hz\n    qts: 0.38\n    vas: 20      # liters\nenclosure:\n  type: sealed\n  volume: 15     # liters\n</code></pre> <p>Guidelines: - Use SI units unless otherwise stated. - Keep numbers realistic; see your driver's datasheet for T/S parameters. - Start simple; add details (losses, ducts, filters) incrementally.</p>"},{"location":"results/interpreting-plots/","title":"Interpreting results","text":"<p>Typical outputs (depends on CLI options): - SPL vs frequency (on-axis): dB referenced to 20 \u00b5Pa at 1 m. - Electrical impedance: real and imaginary parts or magnitude/phase. - Cone excursion: useful to assess limits at low frequencies (if available). - Port velocity (vented): to check chuffing risk (if available).</p> <p>Rules of thumb (sealed): - Box volume \u2193 \u2192 Fc \u2191, Qtc \u2191 \u2192 more peaking and earlier roll-off. - Driver with lower Qts in a small box \u2192 tighter low-end, less extension.</p>"},{"location":"tutorials/sealed-box/","title":"Tutorial: Sealed box","text":"<p>Goal: Predict on-axis SPL and impedance of a simple sealed enclosure.</p>"},{"location":"tutorials/sealed-box/#1-prepare-the-config","title":"1) Prepare the config","text":"<p>Download: examples/sealed.yaml</p>"},{"location":"tutorials/sealed-box/#2-run-the-simulation","title":"2) Run the simulation","text":"<pre><code>speacoupy simulate examples/sealed.yaml\n</code></pre>"},{"location":"tutorials/sealed-box/#3-inspect-results","title":"3) Inspect results","text":"<ul> <li>SPL plot: expected smooth roll-off with system Q near <code>Qtc</code>.</li> <li>Impedance plot: single broad resonance peak near box-loaded <code>Fc</code>.</li> </ul> <p>If results look odd, double-check units (liters vs m\u00b3, Hz vs rad/s) and typos.</p>"}]}